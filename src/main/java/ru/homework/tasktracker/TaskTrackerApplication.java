package ru.homework.tasktracker;

import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
@Slf4j
public class TaskTrackerApplication {

	public static void main(String[] args) {
		SpringApplication.run(TaskTrackerApplication.class, args);
	}

	@Bean
	public CommandLineRunner addGreeting() {
		return args -> {
			String greeting = "\nПривет!\n";
			String mainRules = "Обращение к программе происходит через GET-запрос, в параметре \"event\"\n" +
					"Это обращение может начинаться со следующих ключевых слов:\n" +
					"1. \"user\" - обращение к сервису пользователей;\n" +
					"2. \"task\" - обращение к сервису задач;\n" +
					"При обращении к сервисам после ключего слова надо указать команду, разрешенную соответствующим сервисом.\n";
			String userRules = "Команды сервиса \"user\":\n" +
					"1. \"view\" - просмотр пользователей. Чтобы вывести определнного пользователя, после команды надо ввести его id.\n" +
					"    Примеры команд: \"view\", \"view 1\"\n" +
					"2. \"viewt\" - просмотр задач пользователя. После команды надо ввести id пользователя, чьи задачи ты хочешь посмотреть\n" +
					"    Можно отфильтровать задачи по статусу, для это надо после id ввести фильтр: \"-t=status(CREATED/RUN/COMPLETED)\"\n" +
					"    Примеры команд: \"viewt 1\", \"viewt 1 -fs=RUN\"\n" +
					"3. \"create\" - создание пользователя. После команды надо ввести перечень аргументов, расположенных в строгом порядке: имя\n" +
					"    Пример команды: \"create Вася\"\n" +
					"4. \"edit\" - изменение пользователя. После команды надо ввести id пользователя, которого собираешься изменять,\n" +
					"    а затем перечень аргументов, расположенных в строгом порядке: имя\n" +
					"    Примеры команд: \"edit 1 Петя\"\n" +
					"5. \"delete\" - удаление пользователя. После команды надо ввести id пользователя, которого собираешься удалить\n";
			String taskRules = "Команды сервиса \"task\":\n" +
					"1. \"view\" - просмотр задач. Можно отфильтровать задачи по статусу, для это надо после команды ввести фильтр: \"-fs=status(CREATED/RUN/COMPLETED)\"\n" +
					"    Чтобы вывести определнную задачу, после команды надо ввести ее id.\n" +
					"    Примеры команд: \"view\", \"view 1\", \"view -fs=RUN\"\n" +
					"2. \"create\" - создание задачи. После команды надо ввести перечень аргументов, расположенных в строгом порядке: заголовок,описание,id пользователя,дедлайн(формат: 01.01.2022)\n" +
					"    Пример команды: \"create выполнить дз,написать много кода,4,30.06.2022\"\n" +
					"3. \"edit\" - изменение задачи. После команды надо ввести id задачи, которую собираешься изменять,\n" +
					"    а затем перечень аргументов, расположенных в строгом порядке: заголовок,описание,id пользователя,дедлайн(формат: 01.01.2022),статус(CREATED/RUN/COMPLETED)\n" +
					"    если не хочешь менять какой-то аргумент, то просто подставь знак точки \".\"\n" +
					"    Примеры команд: \"edit 1 выполнить дз,написать много кода,4,30.06.2022\", \"edit 1 .,написать немного кода,.,.,RUN\"\n" +
					"4. \"delete\" - удаление задачи. После команды надо ввести id задачи, которую собираешься удалить.\n";
			log.info(greeting + mainRules + userRules + taskRules);
		};
	}

}
